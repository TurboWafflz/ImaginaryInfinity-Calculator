ImaginaryInfinity Calculator v2.1
Copyright 2020 Finian Wright

ImaginaryInfinity Calculator is a lightweight, but expandable calculator. It's
command line interface is designed to resemble that of some graphing
calculators.

Plugins:
New functionality can easily be added by placing Python files with additional
functions in the plugins directory. To access a function added by a plugin,
type "[plungin].[function]()". For example, if you wanted to run the function
"egg" from the plugin "food", you would type "food.egg()". Arguments placed
in the parentheses will be passed to the function.

Note:
Functions in the "core" plugin can be accessed without specifying "core".
ex. "factor(7)" instead of "core.factor(7)"

Built in commands:
The following commands are built in to the calculator or added by the "core"
plugin.

complex('<on/off>') - Enables/disables complex mode

factor(<number>) - Shows factor pairs for a number

factorList(<number>) - Returns a list of the factors of a number

fancyFactor(<number>) - Shows factor pairs and their sums and differences for
a number

iprt('<module>') - Installs and imports a python module from PyPi

isPrime(<number>) - Checks whether or not a number is is prime

isPerfect(<number>) - Checks whether or not a number's factors add up to twice the
starting number

sh('<command>') - Runs a command directly on your computer

shell() - Starts a shell directly on your computer

quit() - Quit ImaginaryInfinity Calculator



The following commands accept a second argument to prevent the result from being
printed. This is useful when they are used in another function so they don't
all get shown to the user:

factorList(<number>, [printResult])
isPrime(<number>, [printResult])
isPerfect(<number>, [printResult])

printResult can be set to True or False, and defaults to True if not specified
